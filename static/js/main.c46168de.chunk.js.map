{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","carouselImages","setCarouselImages","interval","setInterval","intervalSec","setIntervalSec","direction","setDirection","index","setIndex","useEffect","fetch","then","response","json","data","getDirection","e","selectedDirection","target","name","Container","Row","Col","md","span","offset","Form","Group","as","className","controlId","Label","column","sm","Control","onChange","searchStr","value","type","Check","inline","label","checked","Button","variant","onClick","selectedIndex","Carousel","onSelect","activeIndex","map","item","Item","src","download_url","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAkHeA,EA9GH,WACV,MAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAgCF,mBAAS,KAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAkCN,mBAAS,WAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAwBR,mBAAS,GAAjC,mBAAKS,EAAL,KAAYC,EAAZ,KAEAC,qBAAU,WACRC,MAAM,yCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUd,EAAkBc,QACnC,IAEH,IAgBMC,EAAe,SAACC,GACpB,IAAMC,EAAoBD,EAAEE,OAAOC,KACnCb,EAAaW,IAYf,OACE,eAACG,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAA5B,SACE,oDAGF,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CACEC,GAAIP,IACJQ,UAAU,YACVC,UAAU,wBAHZ,UAKE,cAACJ,EAAA,EAAKK,MAAN,CAAYC,QAAM,EAACC,GAAG,IAAtB,uBAGA,cAACX,EAAA,EAAD,CAAKW,GAAG,IAAR,SACE,cAACP,EAAA,EAAKQ,QAAN,CAAcC,SA/CG,SAACnB,GAC1B,IAAMoB,EAA6B,IAAjBpB,EAAEE,OAAOmB,MAC3BjC,EAAegC,IA6CqCE,KAAK,cAIrD,eAACZ,EAAA,EAAKC,MAAN,CACEC,GAAIP,IACJQ,UAAU,OACVC,UAAU,yBAHZ,UAKE,cAACJ,EAAA,EAAKK,MAAN,CAAYC,QAAM,EAACC,GAAG,IAAtB,wBAGA,eAACX,EAAA,EAAD,CAAKW,GAAG,IAAR,UACE,cAACP,EAAA,EAAKa,MAAN,CACEC,QAAM,EACNC,MAAM,UACNtB,KAAK,UACLmB,KAAK,QACLH,SAAUpB,EACV2B,QAAuB,YAAdrC,IAEX,cAACqB,EAAA,EAAKa,MAAN,CACEC,QAAM,EACNC,MAAM,UACNtB,KAAK,UACLmB,KAAK,QACLH,SAAUpB,EACV2B,QAAuB,YAAdrC,UAIf,cAACsC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAzEX,SAACC,GACF,IAAhB3C,GACFD,EAAYC,GAGZK,EADgB,YAAdH,EACOE,IAEAA,IAkEP,uBAIF,cAACwC,EAAA,EAAD,CAAUlB,UAAU,OAAOmB,SA7DV,SAACF,EAAe9B,GACjB,YAAdX,GACFG,EAASsC,GAEO,YAAdzC,GACFG,EAASsC,MAwD0CG,YAAa1C,EAAhE,gBACGR,QADH,IACGA,OADH,EACGA,EAAgBmD,KAAI,SAACC,GAAD,OACnB,cAACJ,EAAA,EAASK,KAAV,CAAenD,SAAUA,EAAzB,SACE,qBACE4B,UAAU,gBACVwB,IAAKF,EAAKG,aACVC,IAAI,yBC7FHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/C,MAAK,YAAkD,IAA/CgD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c46168de.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, Form, Row, Col, Button, Carousel } from \"react-bootstrap\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [carouselImages, setCarouselImages] = useState([]);\n  const [interval, setInterval] = useState(2000);\n  const [intervalSec, setIntervalSec] = useState(0);\n  const [direction, setDirection] = useState(\"forward\");\n  let [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    fetch(`https://picsum.photos/v2/list?limit=6`)\n      .then((response) => response.json())\n      .then((data) => setCarouselImages(data));\n  }, []);\n\n  const handleIntervalText = (e) => {\n    const searchStr = e.target.value * 1000;\n    setIntervalSec(searchStr);\n  };\n\n  const handleInterval = (selectedIndex) => {\n    if (intervalSec !== 0) {\n      setInterval(intervalSec);\n    }\n    if (direction === \"reverse\") {\n      setIndex(index++);\n    } else {\n      setIndex(index);\n    }\n  };\n\n  const getDirection = (e) => {\n    const selectedDirection = e.target.name;\n    setDirection(selectedDirection);\n  };\n\n  const handleSelect = (selectedIndex, e) => {\n    if (direction === \"forward\") {\n      setIndex(selectedIndex);\n    }\n    if (direction === \"reverse\") {\n      setIndex(selectedIndex--);\n    }\n  };\n\n  return (\n    <Container>\n    <Row>\n      <Col md={{ span: 6, offset: 4 }}>\n        <h1>Image Carousel</h1>\n      </Col>\n    </Row>\n      <Form>\n        <Form.Group\n          as={Row}\n          className=\"mb-3 mt-3\"\n          controlId=\"formPlaintextDuration\"\n        >\n          <Form.Label column sm=\"2\">\n            Duration:\n          </Form.Label>\n          <Col sm=\"2\">\n            <Form.Control onChange={handleIntervalText} type=\"text\" />\n          </Col>\n        </Form.Group>\n\n        <Form.Group\n          as={Row}\n          className=\"mb-3\"\n          controlId=\"formPlaintextDirection\"\n        >\n          <Form.Label column sm=\"2\">\n            Direction:\n          </Form.Label>\n          <Col sm=\"2\">\n            <Form.Check\n              inline\n              label=\"Forward\"\n              name=\"forward\"\n              type=\"radio\"\n              onChange={getDirection}\n              checked={direction === \"forward\"}\n            />\n            <Form.Check\n              inline\n              label=\"Reverse\"\n              name=\"reverse\"\n              type=\"radio\"\n              onChange={getDirection}\n              checked={direction === \"reverse\"}\n            />\n          </Col>\n        </Form.Group>\n        <Button variant=\"secondary\" onClick={handleInterval}>\n          Submit\n        </Button>\n      </Form>\n      <Carousel className=\"mt-3\" onSelect={handleSelect} activeIndex={index}>\n        {carouselImages?.map((item) => (\n          <Carousel.Item interval={interval}>\n            <img\n              className=\"d-block w-100\"\n              src={item.download_url}\n              alt=\"Not found\"\n            />\n          </Carousel.Item>\n        ))}\n      </Carousel>\n    </Container>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}